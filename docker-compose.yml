# docker-compose.yml

# This file defines the core services (containers) needed for our MEV Detector backend.
# It includes the Ethereum node (Geth), Redis, Kafka, and Zookeeper.
# The Graph Node and IPFS services have been removed for a more stable local environment.

version: '3.8' # Specify the Docker Compose file format version

services:
  # --- Ethereum Node (Geth) Service ---
  geth:
    image: ethereum/client-go:stable
    container_name: geth-node
    command:
      - --sepolia # Using Sepolia testnet
      - --http
      - --ws
      - --ws.api=eth,net,web3,txpool
      - --ws.addr=0.0.0.0
      - --ws.port=8546
      - --authrpc.addr=0.0.0.0
      - --authrpc.port=8551
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret=/root/jwtsecret
      - --datadir=/root/.ethereum
      - --syncmode=snap
      - --gcmode=archive
      - --maxpeers=50
    ports:
      - "8545:8545" # HTTP RPC port
      - "8546:8546" # WebSocket RPC port (crucial for Node.js service)
      - "30303:30303" # P2P discovery port
      - "30303:30303/udp" # UDP for P2P discovery
    volumes:
      - ./geth-data:/root/.ethereum
      - ./jwtsecret:/root/jwtsecret # Ensure jwtsecret is mounted
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # --- Zookeeper Service (for Kafka) ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  # --- Kafka Broker Service ---
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    restart: unless-stopped

  # --- Redis Service ---
  redis:
    image: redis:7.2.5-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./redis-data:/data
    restart: unless-stopped