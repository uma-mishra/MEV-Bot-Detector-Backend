export declare const createIpfsClient: typeof import("kubo-rpc-client").create;
export declare function loadSubgraphSchemaFromIPFS(ipfsClient: any, manifest: string): Promise<string>;
export declare function loadManifestFromIPFS(ipfsClient: any, manifest: string): Promise<string>;
export declare function loadManifestYaml(ipfsClient: any, manifest: string): Promise<any>;
/**
 * Validates that the network of a source subgraph matches the target network
 * @param manifestYaml Parsed manifest YAML
 * @param targetNetwork Network of the target subgraph being created
 * @returns Object containing validation result and error message if any
 */
export declare function validateSubgraphNetworkMatch(manifestYaml: any, targetNetwork: string): {
    valid: boolean;
    error?: string;
};
/**
 * Gets the minimum startBlock from all dataSources in the manifest
 * @param manifestYaml Parsed manifest YAML
 * @returns The minimum startBlock or undefined if no startBlock is found
 */
export declare function getMinStartBlock(manifestYaml: any): number | undefined;
